version: 2
jobs:
  build:
   working_directory: ~/AutoIntern-Django

   docker:
    - image: circleci/python:3.6.2-stretch-browsers
    #  environment:
    #    DATABASE_URL: postgresql://root@localhost/postgres?sslmode=disable
    # - image: circleci/postgres:9.6.2
    #  environment:
    #    POSTGRES_USER: postgres
    #    POSTGRES_DB: postgres
    #    POSTGRES_PASSWORD: "T3rnStyl3"
   steps:
    - checkout
    - restore_cache:
        key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
    - run:
        name: Install Python deps in a venv
        command: |
          python3 -m venv venv
          . venv/bin/activate
          pip install -r requirements.txt

    - run:
        name: Set Up GOOGLE_CLOUD_DEFAULT_CREDENTIALS
        command: |
          echo $CLIENT_SECRET | base64 -di > /tmp/client_secret.json


    # Saves dependencies that are downloaded so it builds faster
    - save_cache:
        key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
        paths:
          - "venv"

    - run:
       name: run the tests
       command: |
          export GOOGLE_APPLICATION_CREDENTIALS="/tmp/client_secret.json"
          . venv/bin/activate
          ./cloud_sql_proxy -instances="autointern-196523:us-east1:terndb1"=tcp:5432 &
          python manage.py test

    - run:
        name: download and setup the appengine/cloud sdk
        command: |
          curl -o $HOME/google_appengine_1.9.30.zip https://storage.googleapis.com/appengine-sdks/featured/google_appengine_1.9.30.zip
          unzip -q -d $HOME $HOME/google_appengine_1.9.30.zip
          cd $HOME
          wget  https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-191.0.0-linux-x86_64.tar.gz
          tar -xzf ./google-cloud-sdk-191.0.0-linux-x86_64.tar.gz



    - run:
        name: Deploy the app
        command: |
           # Assume that the buckets for storage are already made
           # Need to make these environment variables
            export GOOGLE_APPLICATION_CREDENTIALS="/tmp/client_secret.json"
            export PYTHONPATH="${HOME}/appengine"
            export PYTHONPATH=${PYTHONPATH}:${HOME}/google-cloud-sdk
            . venv/bin/activate
            rm -rf ./static
            python manage.py collectstatic
            ${HOME}/google-cloud-sdk/bin/gcloud auth activate-service-account --key-file "/tmp/client_secret.json"
            ${HOME}/google-cloud-sdk/bin/gcloud --quiet components update app
            ${HOME}/google-cloud-sdk/bin/gsutil rsync -R static/ gs://autointern/static
            ${HOME}/google-cloud-sdk/bin/gcloud config set project $GCLOUD_PROJECT_ID
            ${HOME}/google-cloud-sdk/bin/gcloud app -q deploy
